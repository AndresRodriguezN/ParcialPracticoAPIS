{
	"info": {
		"_postman_id": "675764db-edd5-4761-b892-ddda4ceaec66",
		"name": "Construccion de APIS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17648210"
	},
	"item": [
		{
			"name": "Restaurantes",
			"item": [
				{
					"name": "Crea un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_restaurante\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Restaurante 2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes"
							]
						}
					},
					"response": [
						{
							"name": "Crea un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Restaurante\",\r\n    \"pais\": \"1\",\r\n    \"ciudad\": \"1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Restaurante\",\n    \"pais\": {\n        \"id\": \"1\",\n        \"nombre\": \"Colombia\"\n    },\n    \"ciudad\": {\n        \"id\": \"1\",\n        \"nombre\": \"Medellin\"\n    },\n    \"culturasGastronomica\": [],\n    \"recetas\": [],\n    \"estrellasMichelin\": []\n}"
						},
						{
							"name": "Crea un restaurante datos incorrectos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Restaurante\",\r\n    \"pais\": \"1\",\r\n    \"ciudad\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 412,\r\n    \"mensaje\": \"Se debe indicar la ciudad del restaurante\"\r\n}"
						}
					]
				},
				{
					"name": "Obtener todos los restaurantes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Numero de restaurante > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todos los restaurantes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Restaurante\",\r\n        \"pais\":{\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Colombia\"    \r\n        },\r\n        \"ciudad\" : {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Medellin\"    \r\n        },\r\n        \"culturasGastronomica\" : [\r\n            {\r\n                \"id\" : \"1\",\r\n                \"nombre\" : \"Mexicana\",\r\n                \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n            },\r\n            {\r\n                \"id\" : \"2\",\r\n                \"nombre\" : \"Colombiana\",\r\n                \"descripcion\" : \"Cultura gastronomica  colombiana\"\r\n            }\r\n        ],\r\n        \"recetas\" : [\r\n            {\r\n                \"id\" : \"1\",\r\n                \"nombre\" : \"Receta 1\",\r\n                \"descripcion\" : \"Descripcion de la receta 1\",\r\n                \"foto\" : \"http://foto.com/1.jpg\",\r\n                \"procesoPreperacion\" : \"Pasos para la receta\",\r\n                \"video\" : \"http://video.com/1.mp4\"\r\n            },\r\n            {\r\n                \"id\" : \"2\",\r\n                \"nombre\" : \"Receta 2\",\r\n                \"descripcion\" : \"Descripcion de la receta 2\",\r\n                \"foto\" : \"http://foto.com/2.jpg\",\r\n                \"procesoPreperacion\" : \"Pasos para la receta\",\r\n                \"video\" : \"http://video.com/2.mp4\"\r\n            }\r\n        ],\r\n        \"estrellasMichelin\" : [\r\n            {\r\n                \"id\" : \"1\",\r\n                \"fechaConsecucion\" : \"2022-10-29\"\r\n            },\r\n            {\r\n                \"id\" : \"2\",\r\n                \"fechaConsecucion\" : \"2023-10-29\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"id\" : \"2\",\r\n        \"nombre\" : \"Restaurante\",\r\n        \"pais\":{\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Colombia\"    \r\n        },\r\n        \"ciudad\" : {\r\n            \"id\" : \"2\",\r\n            \"nombre\" : \"Bogota\"    \r\n        },\r\n        \"culturasGastronomica\" : [\r\n            {\r\n                \"id\" : \"1\",\r\n                \"nombre\" : \"Mexicana\",\r\n                \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n            },\r\n            {\r\n                \"id\" : \"2\",\r\n                \"nombre\" : \"Colombiana\",\r\n                \"descripcion\" : \"Cultura gastronomica  colombiana\"\r\n            }\r\n        ],\r\n        \"recetas\" : [\r\n            {\r\n                \"id\" : \"1\",\r\n                \"nombre\" : \"Receta 1\",\r\n                \"descripcion\" : \"Descripcion de la receta 1\",\r\n                \"foto\" : \"http://foto.com/1.jpg\",\r\n                \"procesoPreperacion\" : \"Pasos para la receta\",\r\n                \"video\" : \"http://video.com/1.mp4\"\r\n            },\r\n            {\r\n                \"id\" : \"2\",\r\n                \"nombre\" : \"Receta 2\",\r\n                \"descripcion\" : \"Descripcion de la receta 2\",\r\n                \"foto\" : \"http://foto.com/2.jpg\",\r\n                \"procesoPreperacion\" : \"Pasos para la receta\",\r\n                \"video\" : \"http://video.com/2.mp4\"\r\n            }\r\n        ],\r\n        \"estrellasMichelin\" : [\r\n            {\r\n                \"id\" : \"1\",\r\n                \"fechaConsecucion\" : \"2022-10-29\"\r\n            },\r\n            {\r\n                \"id\" : \"2\",\r\n                \"fechaConsecucion\" : \"2023-10-29\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n"
						}
					]
				},
				{
					"name": "Obtiene un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/{{id_restaurante}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"{{id_restaurante}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtiene un restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Restaurante\",\r\n    \"pais\":{\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Colombia\"    \r\n    },\r\n    \"ciudad\" : {\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Medellin\"    \r\n    },\r\n    \"culturasGastronomica\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Mexicana\",\r\n            \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"nombre\" : \"Colombiana\",\r\n            \"descripcion\" : \"Cultura gastronomica  colombiana\"\r\n        }\r\n    ],\r\n    \"recetas\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Receta 1\",\r\n            \"descripcion\" : \"Descripcion de la receta 1\",\r\n            \"foto\" : \"http://foto.com/1.jpg\",\r\n            \"procesoPreperacion\" : \"Pasos para la receta\",\r\n            \"video\" : \"http://video.com/1.mp4\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"nombre\" : \"Receta 2\",\r\n            \"descripcion\" : \"Descripcion de la receta 2\",\r\n            \"foto\" : \"http://foto.com/2.jpg\",\r\n            \"procesoPreperacion\" : \"Pasos para la receta\",\r\n            \"video\" : \"http://video.com/2.mp4\"\r\n        }\r\n    ],\r\n    \"estrellasMichelin\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"fechaConsecucion\" : \"2022-10-29\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"fechaConsecucion\" : \"2023-10-29\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "Restaurante no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Obtiene un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Obtiene un restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Restaurante\",\r\n    \"pais\":{\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Colombia\"    \r\n    },\r\n    \"ciudad\" : {\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Medellin\"    \r\n    },\r\n    \"culturasGastronomica\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Mexicana\",\r\n            \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"nombre\" : \"Colombiana\",\r\n            \"descripcion\" : \"Cultura gastronomica  colombiana\"\r\n        }\r\n    ],\r\n    \"recetas\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Receta 1\",\r\n            \"descripcion\" : \"Descripcion de la receta 1\",\r\n            \"foto\" : \"http://foto.com/1.jpg\",\r\n            \"procesoPreperacion\" : \"Pasos para la receta\",\r\n            \"video\" : \"http://video.com/1.mp4\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"nombre\" : \"Receta 2\",\r\n            \"descripcion\" : \"Descripcion de la receta 2\",\r\n            \"foto\" : \"http://foto.com/2.jpg\",\r\n            \"procesoPreperacion\" : \"Pasos para la receta\",\r\n            \"video\" : \"http://video.com/2.mp4\"\r\n        }\r\n    ],\r\n    \"estrellasMichelin\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"fechaConsecucion\" : \"2022-10-29\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"fechaConsecucion\" : \"2023-10-29\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "Restaurante no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Actualizar un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Restaurante actualizado\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/{{id_restaurante}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"{{id_restaurante}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar un restaurante correctamente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Restaurante actualizado\",\r\n    \"pais\": \"1\",\r\n    \"ciudad\": \"1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Restaurante actualizado\",\n    \"pais\": {\n        \"id\": \"1\",\n        \"nombre\": \"Colombia\"\n    },\n    \"ciudad\": {\n        \"id\": \"1\",\n        \"nombre\": \"Medellin\"\n    },\n    \"culturasGastronomica\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Mexicana\",\n            \"descripcion\": \"Cultura gastronomica de mexico\"\n        },\n        {\n            \"id\": \"2\",\n            \"nombre\": \"Colombiana\",\n            \"descripcion\": \"Cultura gastronomica  colombiana\"\n        }\n    ],\n    \"recetas\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Receta 1\",\n            \"descripcion\": \"Descripcion de la receta 1\",\n            \"foto\": \"http://foto.com/1.jpg\",\n            \"procesoPreperacion\": \"Pasos para la receta\",\n            \"video\": \"http://video.com/1.mp4\"\n        },\n        {\n            \"id\": \"2\",\n            \"nombre\": \"Receta 2\",\n            \"descripcion\": \"Descripcion de la receta 2\",\n            \"foto\": \"http://foto.com/2.jpg\",\n            \"procesoPreperacion\": \"Pasos para la receta\",\n            \"video\": \"http://video.com/2.mp4\"\n        }\n    ],\n    \"estrellasMichelin\": [\n        {\n            \"id\": \"1\",\n            \"fechaConsecucion\": \"2022-10-29\"\n        },\n        {\n            \"id\": \"2\",\n            \"fechaConsecucion\": \"2023-10-29\"\n        }\n    ]\n}"
						},
						{
							"name": "Actualizar un restaurante datos no validos",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Restaurante\",\r\n    \"pais\": \"1\",\r\n    \"ciudad\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe indicar la ciudad del restaurante\"\n}"
						},
						{
							"name": "Actualizar Restaurante no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Restaurante\",\r\n    \"pais\": \"1\",\r\n    \"ciudad\": \"1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\r\n}"
						}
					]
				},
				{
					"name": "Actualizar un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Restaurante actualizado\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar un restaurante correctamente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Restaurante actualizado\",\r\n    \"pais\": \"1\",\r\n    \"ciudad\": \"1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Restaurante actualizado\",\n    \"pais\": {\n        \"id\": \"1\",\n        \"nombre\": \"Colombia\"\n    },\n    \"ciudad\": {\n        \"id\": \"1\",\n        \"nombre\": \"Medellin\"\n    },\n    \"culturasGastronomica\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Mexicana\",\n            \"descripcion\": \"Cultura gastronomica de mexico\"\n        },\n        {\n            \"id\": \"2\",\n            \"nombre\": \"Colombiana\",\n            \"descripcion\": \"Cultura gastronomica  colombiana\"\n        }\n    ],\n    \"recetas\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Receta 1\",\n            \"descripcion\": \"Descripcion de la receta 1\",\n            \"foto\": \"http://foto.com/1.jpg\",\n            \"procesoPreperacion\": \"Pasos para la receta\",\n            \"video\": \"http://video.com/1.mp4\"\n        },\n        {\n            \"id\": \"2\",\n            \"nombre\": \"Receta 2\",\n            \"descripcion\": \"Descripcion de la receta 2\",\n            \"foto\": \"http://foto.com/2.jpg\",\n            \"procesoPreperacion\": \"Pasos para la receta\",\n            \"video\": \"http://video.com/2.mp4\"\n        }\n    ],\n    \"estrellasMichelin\": [\n        {\n            \"id\": \"1\",\n            \"fechaConsecucion\": \"2022-10-29\"\n        },\n        {\n            \"id\": \"2\",\n            \"fechaConsecucion\": \"2023-10-29\"\n        }\n    ]\n}"
						},
						{
							"name": "Actualizar un restaurante datos no validos",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Restaurante\",\r\n    \"pais\": \"1\",\r\n    \"ciudad\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe indicar la ciudad del restaurante\"\n}"
						},
						{
							"name": "Actualizar Restaurante no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Restaurante\",\r\n    \"pais\": \"1\",\r\n    \"ciudad\": \"1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\r\n}"
						}
					]
				},
				{
					"name": "Elimina un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/{{id_restaurante}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"{{id_restaurante}}"
							]
						}
					},
					"response": [
						{
							"name": "Elimina un restaurante correcto",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 204,\r\n    \"mensaje\": \"El restaurante con el id indicado fue eliminado\"\r\n}"
						},
						{
							"name": "Elimina un restaurante no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Elimina un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Elimina un restaurante correcto",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 204,\r\n    \"mensaje\": \"El restaurante con el id indicado fue eliminado\"\r\n}"
						},
						{
							"name": "Elimina un restaurante no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Recetas",
			"item": [
				{
					"name": "Crea una receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_receta\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Receta 1\",\r\n    \"descripcion\": \"Descripcion de la receta 1\",\r\n    \"foto\": \"http://foto.com/1.jpg\",\r\n    \"procesoPreparacion\": \"Pasos para la receta\",\r\n    \"video\": \"http://video.com/1.mp4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/recetas",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Crea una receta correcta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Receta 1\",\r\n    \"descripcion\": \"Descripcion de la receta 1\",\r\n    \"foto\": \"http://foto.com/1.jpg\",\r\n    \"procesoPreperacion\": \"Pasos para la receta\",\r\n    \"video\": \"http://video.com/1.mp4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": \"1\",\r\n    \"nombre\": \"Receta 1\",\r\n    \"descripcion\": \"Descripcion de la receta 1\",\r\n    \"foto\": \"http://foto.com/1.jpg\",\r\n    \"procesoPreperacion\": \"Pasos para la receta\",\r\n    \"video\": \"http://video.com/1.mp4\",\r\n    \"culturaGastronomica\" : null,\r\n    \"Productos\" : []\r\n}"
						},
						{
							"name": "Crea una receta datos incorrectos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"\",\r\n    \"descripcion\": \"Descripcion de la receta 1\",\r\n    \"foto\": \"http://foto.com/1.jpg\",\r\n    \"procesoPreperacion\": \"Pasos para la receta\",\r\n    \"video\": \"http://video.com/1.mp4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe el nombre de la receta\"\n}"
						}
					]
				},
				{
					"name": "Obtiene todas las recetas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Numero de recetas > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/recetas",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Obtiene todas las recetas",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"1\",\n        \"nombre\": \"Receta 1\",\n        \"descripcion\": \"Descripcion de la receta 1\",\n        \"foto\": \"http://foto.com/1.jpg\",\n        \"procesoPreperacion\": \"Pasos para la receta\",\n        \"video\": \"http://video.com/1.mp4\",\n        \"culturaGastronomica\" : {\n            \"id\" : \"1\",\n            \"nombre\" : \"Mexicana\",\n            \"descripcion\" : \"Cultura gastronomica de mexico\"\n        },\n        \"Productos\" : [\n            {\n                \"id\" : \"1\",\n                \"nombre\" : \"Nombre del producto\",\n                \"descripcion\" : \"Descripcion del producto\",\n                \"historia\" : \"Historia del producto\"\n            },\n            {\n                \"id\" : \"2\",\n                \"nombre\" : \"Nombre del producto\",\n                \"descripcion\" : \"Descripcion del producto\",\n                \"historia\" : \"Historia del producto\"\n            }\n        ]\n    },\n    {\n        \"id\": \"2\",\n        \"nombre\": \"Receta 2\",\n        \"descripcion\": \"Descripcion de la receta 2\",\n        \"foto\": \"http://foto.com/2.jpg\",\n        \"procesoPreperacion\": \"Pasos para la receta\",\n        \"video\": \"http://video.com/2.mp4\",\n        \"culturaGastronomica\" : {\n            \"id\" : \"1\",\n            \"nombre\" : \"Mexicana\",\n            \"descripcion\" : \"Cultura gastronomica de mexico\"\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "Obtiene una receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/recetas/{{id_receta}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"recetas",
								"{{id_receta}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtiene una receta correctamente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas",
										"{{id_receta}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": \"1\",\r\n    \"nombre\": \"Receta 1\",\r\n    \"descripcion\": \"Descripcion de la receta 1\",\r\n    \"foto\": \"http://foto.com/1.jpg\",\r\n    \"procesoPreperacion\": \"Pasos para la receta\",\r\n    \"video\": \"http://video.com/1.mp4\",\r\n    \"culturaGastronomica\" : {\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Mexicana\",\r\n        \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n    },\r\n    \"Productos\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Nombre del producto\",\r\n            \"descripcion\" : \"Descripcion del producto\",\r\n            \"historia\" : \"Historia del producto\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"nombre\" : \"Nombre del producto\",\r\n            \"descripcion\" : \"Descripcion del producto\",\r\n            \"historia\" : \"Historia del producto\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "Obtiene una receta no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas",
										"{{id_receta}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Obtiene una receta que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La receta con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/recetas/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Obtiene una receta correctamente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas",
										"{{id_receta}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": \"1\",\r\n    \"nombre\": \"Receta 1\",\r\n    \"descripcion\": \"Descripcion de la receta 1\",\r\n    \"foto\": \"http://foto.com/1.jpg\",\r\n    \"procesoPreperacion\": \"Pasos para la receta\",\r\n    \"video\": \"http://video.com/1.mp4\",\r\n    \"culturaGastronomica\" : {\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Mexicana\",\r\n        \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n    },\r\n    \"Productos\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Nombre del producto\",\r\n            \"descripcion\" : \"Descripcion del producto\",\r\n            \"historia\" : \"Historia del producto\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"nombre\" : \"Nombre del producto\",\r\n            \"descripcion\" : \"Descripcion del producto\",\r\n            \"historia\" : \"Historia del producto\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "Obtiene una receta no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas",
										"{{id_receta}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Actualiza una receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Receta 1 actualizado\",\r\n    \"descripcion\": \"Descripcion de la receta 1\",\r\n    \"foto\": \"http://foto.com/1.jpg\",\r\n    \"procesoPreparacion\": \"Pasos para la receta\",\r\n    \"video\": \"http://video.com/1.mp4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/recetas/{{id_receta}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"recetas",
								"{{id_receta}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualiza una receta correcta",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Receta 1\",\r\n    \"descripcion\": \"Descripcion de la receta 1\",\r\n    \"foto\": \"http://foto.com/1.jpg\",\r\n    \"procesoPreperacion\": \"Pasos para la receta\",\r\n    \"video\": \"http://video.com/1.mp4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas",
										"{{id_receta}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Receta 1\",\n    \"descripcion\": \"Descripcion de la receta 1\",\n    \"foto\": \"http://foto.com/1.jpg\",\n    \"procesoPreperacion\": \"Pasos para la receta\",\n    \"video\": \"http://video.com/1.mp4\",\n    \"culturaGastronomica\": {\n        \"id\": \"1\",\n        \"nombre\": \"Mexicana\",\n        \"descripcion\": \"Cultura gastronomica de mexico\"\n    },\n    \"Productos\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Nombre del producto\",\n            \"descripcion\": \"Descripcion del producto\",\n            \"historia\": \"Historia del producto\"\n        },\n        {\n            \"id\": \"2\",\n            \"nombre\": \"Nombre del producto\",\n            \"descripcion\": \"Descripcion del producto\",\n            \"historia\": \"Historia del producto\"\n        }\n    ]\n}"
						},
						{
							"name": "Actualiza una receta no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Receta 1\",\r\n    \"descripcion\": \"Descripcion de la receta 1\",\r\n    \"foto\": \"http://foto.com/1.jpg\",\r\n    \"procesoPreperacion\": \"Pasos para la receta\",\r\n    \"video\": \"http://video.com/1.mp4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas",
										"{{id_receta}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Actualiza una receta que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La receta con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Receta 1 actualizado\",\r\n    \"descripcion\": \"Descripcion de la receta 1\",\r\n    \"foto\": \"http://foto.com/1.jpg\",\r\n    \"procesoPreparacion\": \"Pasos para la receta\",\r\n    \"video\": \"http://video.com/1.mp4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/recetas/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Actualiza una receta correcta",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Receta 1\",\r\n    \"descripcion\": \"Descripcion de la receta 1\",\r\n    \"foto\": \"http://foto.com/1.jpg\",\r\n    \"procesoPreperacion\": \"Pasos para la receta\",\r\n    \"video\": \"http://video.com/1.mp4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas",
										"{{id_receta}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Receta 1\",\n    \"descripcion\": \"Descripcion de la receta 1\",\n    \"foto\": \"http://foto.com/1.jpg\",\n    \"procesoPreperacion\": \"Pasos para la receta\",\n    \"video\": \"http://video.com/1.mp4\",\n    \"culturaGastronomica\": {\n        \"id\": \"1\",\n        \"nombre\": \"Mexicana\",\n        \"descripcion\": \"Cultura gastronomica de mexico\"\n    },\n    \"Productos\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Nombre del producto\",\n            \"descripcion\": \"Descripcion del producto\",\n            \"historia\": \"Historia del producto\"\n        },\n        {\n            \"id\": \"2\",\n            \"nombre\": \"Nombre del producto\",\n            \"descripcion\": \"Descripcion del producto\",\n            \"historia\": \"Historia del producto\"\n        }\n    ]\n}"
						},
						{
							"name": "Actualiza una receta no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Receta 1\",\r\n    \"descripcion\": \"Descripcion de la receta 1\",\r\n    \"foto\": \"http://foto.com/1.jpg\",\r\n    \"procesoPreperacion\": \"Pasos para la receta\",\r\n    \"video\": \"http://video.com/1.mp4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas",
										"{{id_receta}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Elimina una receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/recetas/{{id_receta}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"recetas",
								"{{id_receta}}"
							]
						}
					},
					"response": [
						{
							"name": "Elimina una receta correcta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas",
										"{{id_receta}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La receta con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Elimina una receta no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas",
										"{{id_receta}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Elimina una receta que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La receta con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/recetas/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"recetas",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Elimina una receta correcta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas",
										"{{id_receta}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La receta con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Elimina una receta no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/recetas/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"recetas",
										"{{id_receta}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrada\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Cultura Gastronomica",
			"item": [
				{
					"name": "Crea una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_cultura\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\" : \"Mexicana\",\r\n    \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/culturasGastronomica",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"culturasGastronomica"
							]
						}
					},
					"response": [
						{
							"name": "Crea una cultura correcta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Mexicana\",\r\n    \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Mexicana\",\r\n    \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n}"
						},
						{
							"name": "Crea una cultura datos incorrectos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"\",\r\n    \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe el nombre de la cultura gastronomica\"\n}"
						}
					]
				},
				{
					"name": "Obtiene todas las culturas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Numero de culturas > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/culturasGastronomica",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"culturasGastronomica"
							]
						}
					},
					"response": [
						{
							"name": "Obtiene todas las culturas",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\" : \"1\",\n        \"nombre\" : \"Mexicana\",\n        \"descripcion\" : \"Cultura gastronomica de mexico\",\n        \"pais\":[{\n            \"id\" : \"1\",\n            \"nombre\" : \"Colombia\"    \n        }],\n        \"Productos\" : [\n            {\n                \"id\" : \"1\",\n                \"nombre\" : \"Nombre del producto\",\n                \"descripcion\" : \"Descripcion del producto\",\n                \"historia\" : \"Historia del producto\"\n            },\n            {\n                \"id\" : \"2\",\n                \"nombre\" : \"Nombre del producto\",\n                \"descripcion\" : \"Descripcion del producto\",\n                \"historia\" : \"Historia del producto\"\n            }\n        ]\n    },\n    {\n        \"id\" : \"2\",\n        \"nombre\" : \"Mexicana\",\n        \"descripcion\" : \"Cultura gastronomica de mexico\",\n        \"pais\":{\n            \"id\" : \"1\",\n            \"nombre\" : \"Colombia\"    \n        },\n        \"Productos\" : [\n            {\n                \"id\" : \"1\",\n                \"nombre\" : \"Nombre del producto\",\n                \"descripcion\" : \"Descripcion del producto\",\n                \"historia\" : \"Historia del producto\"\n            },\n            {\n                \"id\" : \"2\",\n                \"nombre\" : \"Nombre del producto\",\n                \"descripcion\" : \"Descripcion del producto\",\n                \"historia\" : \"Historia del producto\"\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Obtiene una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/culturasGastronomica/{{id_cultura}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"culturasGastronomica",
								"{{id_cultura}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtiene una cultura correctamente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_receta}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Mexicana\",\r\n    \"descripcion\" : \"Cultura gastronomica de mexico\",\r\n    \"pais\":[{\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Colombia\"    \r\n    }],\r\n    \"Productos\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Nombre del producto\",\r\n            \"descripcion\" : \"Descripcion del producto\",\r\n            \"historia\" : \"Historia del producto\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"nombre\" : \"Nombre del producto\",\r\n            \"descripcion\" : \"Descripcion del producto\",\r\n            \"historia\" : \"Historia del producto\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "Obtiene una cultura no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Obtiene una cultura que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La cultura gastronomica con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/culturasGastronomica/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"culturasGastronomica",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Obtiene una cultura correctamente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_receta}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Mexicana\",\r\n    \"descripcion\" : \"Cultura gastronomica de mexico\",\r\n    \"pais\":[{\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Colombia\"    \r\n    }],\r\n    \"Productos\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Nombre del producto\",\r\n            \"descripcion\" : \"Descripcion del producto\",\r\n            \"historia\" : \"Historia del producto\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"nombre\" : \"Nombre del producto\",\r\n            \"descripcion\" : \"Descripcion del producto\",\r\n            \"historia\" : \"Historia del producto\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "Obtiene una cultura no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Actualiza una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Mexicana\",\r\n    \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/culturasGastronomica/{{id_cultura}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"culturasGastronomica",
								"{{id_cultura}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualiza una receta correcta",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Mexicana\",\r\n    \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\" : \"1\",\n    \"nombre\" : \"Mexicana\",\n    \"descripcion\" : \"Cultura gastronomica de mexico\"\n}"
						},
						{
							"name": "Actualiza una receta no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Mexicana\",\r\n    \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Actualiza una cultura que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La cultura gastronomica con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Mexicana\",\r\n    \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/culturasGastronomica/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"culturasGastronomica",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Actualiza una receta correcta",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Mexicana\",\r\n    \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\" : \"1\",\n    \"nombre\" : \"Mexicana\",\n    \"descripcion\" : \"Cultura gastronomica de mexico\"\n}"
						},
						{
							"name": "Actualiza una receta no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Mexicana\",\r\n    \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Elimina una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/culturasGastronomica/{{id_cultura}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"culturasGastronomica",
								"{{id_cultura}}"
							]
						}
					},
					"response": [
						{
							"name": "Elimina una cultura correcta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La cultura gastronomica con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Elimina una receta no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_receta}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura Gastronomica con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Elimina una cultura que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La cultura gastronomica con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/culturasGastronomica/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"culturasGastronomica",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Elimina una cultura correcta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La cultura gastronomica con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Elimina una receta no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_receta}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_receta}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura Gastronomica con el id indicado no fue encontrada\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Estrella Michelin",
			"item": [
				{
					"name": "Crea una estrella michelin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_estrella\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fechaConsecucion\": \"2022-10-29\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/estrellasMichelin",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"estrellasMichelin"
							]
						}
					},
					"response": [
						{
							"name": "Crea una estrella michelin correcta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fechaConsecucion\": \"2022-10-29\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"fechaConsecucion\": \"2022-10-29\"\n}"
						},
						{
							"name": "Crea una estrella michelin error datos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fechaConsecucion\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe indicar la fecha de consecucion\"\n}"
						}
					]
				},
				{
					"name": "obtiene todas las estrellas michelin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Numero de estrellas > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/estrellasMichelin",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"estrellasMichelin"
							]
						}
					},
					"response": [
						{
							"name": "obtiene todas las estrellas michelin",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"1\",\n        \"fechaConsecucion\": \"2022-10-29\"\n    },\n    {\n        \"id\": \"2\",\n        \"fechaConsecucion\": \"2023-10-29\"\n    }\n]"
						}
					]
				},
				{
					"name": "obtiene una estrella michelin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/estrellasMichelin/{{id_estrella}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"estrellasMichelin",
								"{{id_estrella}}"
							]
						}
					},
					"response": [
						{
							"name": "obtiene una estrella michelin correcta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin/{{id_estrella}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin",
										"{{id_estrella}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"fechaConsecucion\": \"2022-10-29\"\n}"
						},
						{
							"name": "obtiene una estrella michelin no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin/{{id_estrella}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin",
										"{{id_estrella}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La estrella michelin con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "obtiene una estrella michelin que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La estrella michelin con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/estrellasMichelin/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"estrellasMichelin",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "obtiene una estrella michelin correcta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin/{{id_estrella}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin",
										"{{id_estrella}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"fechaConsecucion\": \"2022-10-29\"\n}"
						},
						{
							"name": "obtiene una estrella michelin no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin/{{id_estrella}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin",
										"{{id_estrella}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La estrella michelin con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Actualiza estrella michelin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fechaConsecucion\": \"2022-10-29\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/estrellasMichelin/{{id_estrella}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"estrellasMichelin",
								"{{id_estrella}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualiza estrella michelin correcto",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fechaConsecucion\": \"2022-10-29\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin/{{id_estrella}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin",
										"{{id_estrella}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"id\": \"1\",\r\n    \"fechaConsecucion\": \"2022-10-29\"\r\n}"
						},
						{
							"name": "Actualiza estrella michelin no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fechaConsecucion\": \"2022-10-29\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin/{{id_estrella}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin",
										"{{id_estrella}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La estrella michelin con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Actualiza estrella michelin que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La estrella michelin con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fechaConsecucion\": \"2022-10-29\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/estrellasMichelin/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"estrellasMichelin",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Actualiza estrella michelin correcto",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fechaConsecucion\": \"2022-10-29\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin/{{id_estrella}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin",
										"{{id_estrella}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"id\": \"1\",\r\n    \"fechaConsecucion\": \"2022-10-29\"\r\n}"
						},
						{
							"name": "Actualiza estrella michelin no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fechaConsecucion\": \"2022-10-29\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin/{{id_estrella}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin",
										"{{id_estrella}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La estrella michelin con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Elimina una estrella michelin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/estrellasMichelin/{{id_estrella}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"estrellasMichelin",
								"{{id_estrella}}"
							]
						}
					},
					"response": [
						{
							"name": "Elimina una estrella michelin",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin/{{id_estrella}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin",
										"{{id_estrella}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La estrella michelin con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Elimina una estrella michelin no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin/{{id_estrella}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin",
										"{{id_estrella}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La estrella michelin con el id indicado no se encontro\"\n}"
						}
					]
				},
				{
					"name": "Elimina una estrella michelin que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La estrella michelin con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/estrellasMichelin/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"estrellasMichelin",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Elimina una estrella michelin",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin/{{id_estrella}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin",
										"{{id_estrella}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La estrella michelin con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Elimina una estrella michelin no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/estrellasMichelin/{{id_estrella}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"estrellasMichelin",
										"{{id_estrella}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La estrella michelin con el id indicado no se encontro\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Productos",
			"item": [
				{
					"name": "crea un producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_producto\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Nombre del producto\",\r\n    \"descripcion\": \"Descripcion del producto\",\r\n    \"historia\": \"Historia del producto\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/productos",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"productos"
							]
						}
					},
					"response": [
						{
							"name": "crea un producto correcto",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Nombre del producto\",\r\n    \"descripcion\": \"Descripcion del producto\",\r\n    \"historia\": \"Historia del producto\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\" : \"1\",\n    \"nombre\": \"Nombre del producto\",\n    \"descripcion\": \"Descripcion del producto\",\n    \"historia\": \"Historia del producto\"\n}"
						},
						{
							"name": "crea un producto error de datos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": ,\r\n    \"descripcion\": \"Descripcion del producto\",\r\n    \"historia\": \"Historia del producto\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe el nombre del producto\"\n}"
						}
					]
				},
				{
					"name": "Obtiene todos los productos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Numero de productos > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/productos",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"productos"
							]
						}
					},
					"response": [
						{
							"name": "Obtiene todos los productos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Nombre del producto\",\r\n        \"descripcion\" : \"Descripcion del producto\",\r\n        \"historia\" : \"Historia del producto\",\r\n        \"categoria\" : {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"categoria\"\r\n        }\r\n    },\r\n    {\r\n        \"id\" : \"2\",\r\n        \"nombre\" : \"Nombre del producto\",\r\n        \"descripcion\" : \"Descripcion del producto\",\r\n        \"historia\" : \"Historia del producto\",\r\n        \"categoria\" : {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"categoria\"\r\n        }\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "Obtiene un producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/productos/{{id_producto}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"productos",
								"{{id_producto}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtiene un producto",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Nombre del producto\",\n    \"descripcion\": \"Descripcion del producto\",\n    \"historia\": \"Historia del producto\",\n    \"categoria\": {\n        \"id\": \"1\",\n        \"nombre\": \"categoria\"\n    }\n}"
						},
						{
							"name": "Obtiene un producto no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Obtiene un producto No existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El producto con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/productos/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"productos",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Obtiene un producto",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Nombre del producto\",\n    \"descripcion\": \"Descripcion del producto\",\n    \"historia\": \"Historia del producto\",\n    \"categoria\": {\n        \"id\": \"1\",\n        \"nombre\": \"categoria\"\n    }\n}"
						},
						{
							"name": "Obtiene un producto no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Actualiza un producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Nombre del producto\",\r\n    \"descripcion\": \"Descripcion del producto\",\r\n    \"historia\": \"Historia del producto\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/productos/{{id_producto}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"productos",
								"{{id_producto}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualiza un producto correcto",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Nombre del producto\",\r\n    \"descripcion\": \"Descripcion del producto\",\r\n    \"historia\": \"Historia del producto\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Nombre del producto\",\n    \"descripcion\": \"Descripcion del producto\",\n    \"historia\": \"Historia del producto\",\n    \"categoria\": {\n        \"id\": \"1\",\n        \"nombre\": \"categoria\"\n    }\n}"
						},
						{
							"name": "Actualiza un producto no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Nombre del producto\",\r\n    \"descripcion\": \"Descripcion del producto\",\r\n    \"historia\": \"Historia del producto\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Actualiza un producto no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El producto con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Nombre del producto\",\r\n    \"descripcion\": \"Descripcion del producto\",\r\n    \"historia\": \"Historia del producto\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/productos/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"productos",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Actualiza un producto correcto",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Nombre del producto\",\r\n    \"descripcion\": \"Descripcion del producto\",\r\n    \"historia\": \"Historia del producto\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Nombre del producto\",\n    \"descripcion\": \"Descripcion del producto\",\n    \"historia\": \"Historia del producto\",\n    \"categoria\": {\n        \"id\": \"1\",\n        \"nombre\": \"categoria\"\n    }\n}"
						},
						{
							"name": "Actualiza un producto no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Nombre del producto\",\r\n    \"descripcion\": \"Descripcion del producto\",\r\n    \"historia\": \"Historia del producto\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Elimina un producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/productos/{{id_producto}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"productos",
								"{{id_producto}}"
							]
						}
					},
					"response": [
						{
							"name": "Elimina un producto correcto",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"El producto con el id indicado fue eliminado\"\n}"
						},
						{
							"name": "Elimina un producto no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Elimina un producto no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El producto con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/productos/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"productos",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Elimina un producto correcto",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"El producto con el id indicado fue eliminado\"\n}"
						},
						{
							"name": "Elimina un producto no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Ciudad",
			"item": [
				{
					"name": "crear ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_ciudad\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Medellin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades"
							]
						}
					},
					"response": [
						{
							"name": "crear ciudad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Medellin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Medellin\"\n}"
						},
						{
							"name": "crear ciudad datos incorrectos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe indicar la ciudad de la ciudad\"\n}"
						}
					]
				},
				{
					"name": "obtener ciudades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Numero de ciudades > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades"
							]
						}
					},
					"response": [
						{
							"name": "obtener ciudades",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Medellin\"    \r\n    },\r\n    {\r\n        \"id\" : \"2\",\r\n        \"nombre\" : \"Bogota\"    \r\n    }\r\n]"
						}
					]
				},
				{
					"name": "Obtener una ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/{{id_ciudad}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"{{id_ciudad}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una ciudad",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades/{{id_ciudad}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Medellin\"\n}"
						},
						{
							"name": "Obtener una ciudad no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades/{{id_ciudad}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La ciudad con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Obtener una ciudad que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La ciudad con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una ciudad",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades/{{id_ciudad}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Medellin\"\n}"
						},
						{
							"name": "Obtener una ciudad no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades/{{id_ciudad}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La ciudad con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Actualizar una ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Medellin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/{{id_ciudad}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"{{id_ciudad}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una ciudad",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Medellin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades/{{id_ciudad}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Medellin\"\n}"
						},
						{
							"name": "Actualizar una ciudad no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Medellin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades/{{id_ciudad}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La ciudad con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Actualizar una ciudad no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La ciudad con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Medellin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una ciudad",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Medellin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades/{{id_ciudad}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Medellin\"\n}"
						},
						{
							"name": "Actualizar una ciudad no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Medellin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades/{{id_ciudad}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La ciudad con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Eliminar una ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/{{id_ciudad}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"{{id_ciudad}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar una ciudad",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades/{{id_ciudad}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La ciudad con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Eliminar una ciudad no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades/{{id_ciudad}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La ciudad con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Eliminar una ciudad No existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La ciudad con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar una ciudad",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades/{{id_ciudad}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La ciudad con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Eliminar una ciudad no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades/{{id_ciudad}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades",
										"{{id_ciudad}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La ciudad con el id indicado no fue encontrada\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Pais",
			"item": [
				{
					"name": "crear un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_pais\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\" : \"Colombia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises"
							]
						}
					},
					"response": [
						{
							"name": "crear un pais",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Colombia\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Colombia\",\r\n        \"ciudades\" : [],\r\n        \"region\" : []\r\n    }"
						},
						{
							"name": "crear un pais datos incorrectos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe el nombre del pais\"\n}"
						}
					]
				},
				{
					"name": "Obtener paises",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Numero de paises > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises"
							]
						}
					},
					"response": [
						{
							"name": "Obtener paises",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Colombia\",\r\n        \"ciudades\" : [\r\n            {\r\n                \"id\": \"1\",\r\n                \"nombre\": \"Medellin\"\r\n            },\r\n            {\r\n                \"id\": \"2\",\r\n                \"nombre\": \"Bogota\"\r\n            }\r\n        ],\r\n        \"region\" : {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"region\"\r\n        }\r\n    },\r\n    {\r\n        \"id\" : \"2\",\r\n        \"nombre\" : \"Peru\",\r\n        \"ciudades\" : [\r\n            {\r\n                \"id\": \"3\",\r\n                \"nombre\": \"Lima\"\r\n            },\r\n            {\r\n                \"id\": \"4\",\r\n                \"nombre\": \"Cusco\"\r\n            }\r\n        ],\r\n                \"region\" : {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"region\"\r\n        }\r\n    }\r\n\r\n]"
						}
					]
				},
				{
					"name": "obtener un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/{{id_pais}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"{{id_pais}}"
							]
						}
					},
					"response": [
						{
							"name": "obtener un pais",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Colombia\",\r\n        \"ciudades\" : [\r\n            {\r\n                \"id\": \"1\",\r\n                \"nombre\": \"Medellin\"\r\n            },\r\n            {\r\n                \"id\": \"2\",\r\n                \"nombre\": \"Bogota\"\r\n            }\r\n        ],\r\n        \"region\" : {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"region\"\r\n        }\r\n    }"
						},
						{
							"name": "obtener un pais no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El pais con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "obtener un pais no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El pais con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "obtener un pais",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Colombia\",\r\n        \"ciudades\" : [\r\n            {\r\n                \"id\": \"1\",\r\n                \"nombre\": \"Medellin\"\r\n            },\r\n            {\r\n                \"id\": \"2\",\r\n                \"nombre\": \"Bogota\"\r\n            }\r\n        ],\r\n        \"region\" : {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"region\"\r\n        }\r\n    }"
						},
						{
							"name": "obtener un pais no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El pais con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Actualiza un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\" : \"Colombia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/{{id_pais}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"{{id_pais}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualiza un pais",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Colombia\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Colombia\",\r\n    \"ciudades\" : [],\r\n    \"region\" : []\r\n}"
						},
						{
							"name": "Actualiza un pais no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Colombia\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"El pais con el id indicado no fue encontrado\"\r\n}"
						}
					]
				},
				{
					"name": "Actualiza un pais No existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El pais con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\" : \"Colombia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Actualiza un pais",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Colombia\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Colombia\",\r\n    \"ciudades\" : [],\r\n    \"region\" : []\r\n}"
						},
						{
							"name": "Actualiza un pais no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Colombia\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"El pais con el id indicado no fue encontrado\"\r\n}"
						}
					]
				},
				{
					"name": "Elimina un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/{{id_pais}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"{{id_pais}}"
							]
						}
					},
					"response": [
						{
							"name": "Elimina un pais",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 204,\r\n    \"mensaje\": \"El pais con el id indicado fue eliminado\"\r\n}"
						},
						{
							"name": "Elimina un pais no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El pais con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Elimina un pais no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El pais con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Elimina un pais",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 204,\r\n    \"mensaje\": \"El pais con el id indicado fue eliminado\"\r\n}"
						},
						{
							"name": "Elimina un pais no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El pais con el id indicado no fue encontrado\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Region",
			"item": [
				{
					"name": "Crear region",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_region\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\" : \"region\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/regiones",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"regiones"
							]
						}
					},
					"response": [
						{
							"name": "Crear region",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"region\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": \"1\",\r\n    \"nombre\" : \"region\"\r\n}"
						},
						{
							"name": "Crear region datos no validos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe el nombre de la region\"\n}"
						}
					]
				},
				{
					"name": "Obtener regiones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Numero de regiones > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/regiones",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"regiones"
							]
						}
					},
					"response": [
						{
							"name": "Obtener regiones",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"region\"\r\n    },\r\n    {\r\n        \"id\" : \"2\",\r\n        \"nombre\" : \"region 2 \"\r\n    }\r\n\r\n]"
						}
					]
				},
				{
					"name": "Obtener una region",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/regiones/{{id_region}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"regiones",
								"{{id_region}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una region",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones/{{id_region}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones",
										"{{id_region}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"region\"\r\n}"
						},
						{
							"name": "Obtener una region no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones/{{id_region}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones",
										"{{id_region}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La region con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Obtener una region no  existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La region con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/regiones/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"regiones",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una region",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones/{{id_region}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones",
										"{{id_region}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"region\"\r\n}"
						},
						{
							"name": "Obtener una region no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones/{{id_region}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones",
										"{{id_region}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La region con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "actualizar region",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\" : \"region\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/regiones/{{id_region}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"regiones",
								"{{id_region}}"
							]
						}
					},
					"response": [
						{
							"name": "actualizar region",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"region\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones/{{id_region}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones",
										"{{id_region}}"
									]
								}
							},
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"region\"\r\n}"
						},
						{
							"name": "actualizar region no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"region\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones/{{id_region}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones",
										"{{id_region}}"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"La region con el id indicado no fue encontrada\"\r\n}"
						}
					]
				},
				{
					"name": "actualizar region no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La region con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\" : \"region\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/regiones/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"regiones",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "actualizar region",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"region\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones/{{id_region}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones",
										"{{id_region}}"
									]
								}
							},
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"region\"\r\n}"
						},
						{
							"name": "actualizar region no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"region\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones/{{id_region}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones",
										"{{id_region}}"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"La region con el id indicado no fue encontrada\"\r\n}"
						}
					]
				},
				{
					"name": "Elimina una region",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/regiones/{{id_region}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"regiones",
								"{{id_region}}"
							]
						}
					},
					"response": [
						{
							"name": "Elimina una region",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones/{{id_region}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones",
										"{{id_region}}"
									]
								}
							},
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La region con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Elimina una region no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones/{{id_region}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones",
										"{{id_region}}"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"La region con el id indicado no fue encontrada\"\r\n}"
						}
					]
				},
				{
					"name": "Elimina una region no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La region con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/regiones/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"regiones",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Elimina una region",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones/{{id_region}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones",
										"{{id_region}}"
									]
								}
							},
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La region con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Elimina una region no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones/{{id_region}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones",
										"{{id_region}}"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"La region con el id indicado no fue encontrada\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "Categoria",
			"item": [
				{
					"name": "crear una categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_categoria\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\" : \"Nombre categoria\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/categorias",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"categorias"
							]
						}
					},
					"response": [
						{
							"name": "crear una categoria",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Nombre categoria\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Nombre categoria\"\r\n}"
						},
						{
							"name": "crear una categoria datos con error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe indicar el nombre de la categoria\"\n}"
						}
					]
				},
				{
					"name": "Obtener categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Numero de categorias > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/categorias",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"categorias"
							]
						}
					},
					"response": [
						{
							"name": "Obtener categoria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Nombre categoria\"\r\n    },\r\n    {\r\n        \"id\" : \"2\",\r\n        \"nombre\" : \"Nombre categoria\"\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "Obtener una categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/categorias/{{id_categoria}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"categorias",
								"{{id_categoria}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una categoria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias/{{id_categoria}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias",
										"{{id_categoria}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Nombre categoria\"\r\n}"
						},
						{
							"name": "Obtener una categoria no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias/{{id_categoria}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias",
										"{{id_categoria}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La categoria con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Obtener una categoria no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La categoria con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/categorias/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"categorias",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una categoria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias/{{id_categoria}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias",
										"{{id_categoria}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Nombre categoria\"\r\n}"
						},
						{
							"name": "Obtener una categoria no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias/{{id_categoria}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias",
										"{{id_categoria}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La categoria con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Actualizar una categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\":\"Nombre categoria\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/categorias/{{id_categoria}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"categorias",
								"{{id_categoria}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una categoria",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\":\"Nombre categoria\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias/{{id_categoria}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias",
										"{{id_categoria}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\":\"Nombre categoria\"\r\n}"
						},
						{
							"name": "Actualizar una categoria no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\":\"Nombre categoria\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias/{{id_categoria}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias",
										"{{id_categoria}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La region con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Actualizar una categoria no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La categoria con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\":\"Nombre categoria\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/categorias/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"categorias",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una categoria",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\":\"Nombre categoria\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias/{{id_categoria}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias",
										"{{id_categoria}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\":\"Nombre categoria\"\r\n}"
						},
						{
							"name": "Actualizar una categoria no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\":\"Nombre categoria\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias/{{id_categoria}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias",
										"{{id_categoria}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La region con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Eliminar una categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/categorias/{{id_categoria}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"categorias",
								"{{id_categoria}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar una categoria",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias/{{id_categoria}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias",
										"{{id_categoria}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La categoria con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Eliminar una categoria no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias/{{id_categoria}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias",
										"{{id_categoria}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La categoria con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Eliminar una categoria Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La categoria con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/categorias/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"categorias",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar una categoria",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias/{{id_categoria}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias",
										"{{id_categoria}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La categoria con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Eliminar una categoria no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/categorias/{{id_categoria}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"categorias",
										"{{id_categoria}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La categoria con el id indicado no fue encontrada\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Restaurante-Recetas",
			"item": [
				{
					"name": "Agregar una receta a un restaurante",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"restaurantes",
								"{{id_restaurante}}",
								"recetas",
								"{{id_recetas}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar una receta a un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas",
										"{{id_recetas}}"
									]
								}
							},
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Restaurante\",\r\n    \"pais\":{\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Colombia\"    \r\n    },\r\n    \"ciudad\" : {\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Medellin\"    \r\n    },\r\n    \"culturasGastronomica\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Mexicana\",\r\n            \"descripcion\" : \"Cultura gastronomica de mexico\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"nombre\" : \"Colombiana\",\r\n            \"descripcion\" : \"Cultura gastronomica  colombiana\"\r\n        }\r\n    ],\r\n    \"recetas\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"nombre\" : \"Receta 1\",\r\n            \"descripcion\" : \"Descripcion de la receta 1\",\r\n            \"foto\" : \"http://foto.com/1.jpg\",\r\n            \"procesoPreperacion\" : \"Pasos para la receta\",\r\n            \"video\" : \"http://video.com/1.mp4\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"nombre\" : \"Receta 2\",\r\n            \"descripcion\" : \"Descripcion de la receta 2\",\r\n            \"foto\" : \"http://foto.com/2.jpg\",\r\n            \"procesoPreperacion\" : \"Pasos para la receta\",\r\n            \"video\" : \"http://video.com/2.mp4\"\r\n        }\r\n    ],\r\n    \"estrellasMichelin\" : [\r\n        {\r\n            \"id\" : \"1\",\r\n            \"fechaConsecucion\" : \"2022-10-29\"\r\n        },\r\n        {\r\n            \"id\" : \"2\",\r\n            \"fechaConsecucion\" : \"2023-10-29\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "Agregar una receta a un restaurante que no existe",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas",
										"{{id_recetas}}"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Agregar una receta que no existe a un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas",
										"{{id_recetas}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Obtener una receta de un restaurante",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}/",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"restaurantes",
								"{{id_restaurante}}",
								"recetas",
								"{{id_recetas}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Obtener una receta de un restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}/",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas",
										"{{id_recetas}}",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Receta 1\",\n    \"descripcion\": \"Descripcion de la receta 1\",\n    \"foto\": \"http://foto.com/1.jpg\",\n    \"procesoPreperacion\": \"Pasos para la receta\",\n    \"video\": \"http://video.com/1.mp4\"\n}"
						},
						{
							"name": "Obtener una receta de un restaurante que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}/",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas",
										"{{id_recetas}}",
										""
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\r\n}"
						},
						{
							"name": "Obtener una receta que no existe a un restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}/",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas",
										"{{id_recetas}}",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"La receta con el id indicado no fue encontrada\"\r\n}"
						},
						{
							"name": "Obtener una receta que no esta asociada al restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}/",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas",
										"{{id_recetas}}",
										""
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 412,\r\n    \"mensaje\": \"La receta no esta asociada al restaurante\"\r\n}"
						}
					]
				},
				{
					"name": "Obtener las recetas de un restaurante",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"restaurantes",
								"{{id_restaurante}}",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Obtener las recetas de un restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Receta 1\",\r\n        \"descripcion\" : \"Descripcion de la receta 1\",\r\n        \"foto\" : \"http://foto.com/1.jpg\",\r\n        \"procesoPreperacion\" : \"Pasos para la receta\",\r\n        \"video\" : \"http://video.com/1.mp4\"\r\n    },\r\n    {\r\n        \"id\" : \"2\",\r\n        \"nombre\" : \"Receta 2\",\r\n        \"descripcion\" : \"Descripcion de la receta 2\",\r\n        \"foto\" : \"http://foto.com/2.jpg\",\r\n        \"procesoPreperacion\" : \"Pasos para la receta\",\r\n        \"video\" : \"http://video.com/2.mp4\"\r\n    }\r\n]"
						},
						{
							"name": "Obtener las recetas de un restaurante que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\r\n}"
						}
					]
				},
				{
					"name": "Actualizar las recetas de un restaruante",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\":\"1\"\r\n    },\r\n    {\r\n        \"id\":\"2\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"restaurantes",
								"{{id_restaurante}}",
								"recetas"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar las recetas de un restaruante",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\":\"1\"\r\n    },\r\n    {\r\n        \"id\":\"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Restaurante\",\n    \"pais\": {\n        \"id\": \"1\",\n        \"nombre\": \"Colombia\"\n    },\n    \"ciudad\": {\n        \"id\": \"1\",\n        \"nombre\": \"Medellin\"\n    },\n    \"culturasGastronomica\": [],\n    \"recetas\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Receta 1\",\n            \"descripcion\": \"Descripcion de la receta 1\",\n            \"foto\": \"http://foto.com/1.jpg\",\n            \"procesoPreperacion\": \"Pasos para la receta\",\n            \"video\": \"http://video.com/1.mp4\"\n        },\n        {\n            \"id\": \"2\",\n            \"nombre\": \"Receta 2\",\n            \"descripcion\": \"Descripcion de la receta 2\",\n            \"foto\": \"http://foto.com/2.jpg\",\n            \"procesoPreperacion\": \"Pasos para la receta\",\n            \"video\": \"http://video.com/2.mp4\"\n        }\n    ],\n    \"estrellasMichelin\": []\n}"
						},
						{
							"name": "Actualizar las recetas de un restaurante que no existen",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\":\"1\"\r\n    },\r\n    {\r\n        \"id\":\"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Actualizar las recetas que no existen de un restaurante",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\":\"1\"\r\n    },\r\n    {\r\n        \"id\":\"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Borrar una receta de un restaurante",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"restaurantes",
								"{{id_restaurante}}",
								"recetas",
								"{{id_recetas}}"
							]
						}
					},
					"response": [
						{
							"name": "Borrar una receta de un restaurante",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas",
										"{{id_recetas}}"
									]
								}
							},
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La receta con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Borrar una receta de un restaurante que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas",
										"{{id_recetas}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Borrar una receta que no existe de un restaurante",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas",
										"{{id_recetas}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrada\"\n}"
						},
						{
							"name": "Borrar una receta no asociada de un restaurante",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/recetas/{{id_recetas}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"recetas",
										"{{id_recetas}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"La receta con el id indicado no esta asociado al restaurante\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Restaurante-culturaGastronomica",
			"item": [
				{
					"name": "Agregar una cultura gastronomica a un restaurante",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"restaurantes",
								"{{id_restaurante}}",
								"culturaGastronomica",
								"{{id_cultura}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar una cultura gastronomica a un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Restaurante\",\n    \"pais\": {\n        \"id\": \"1\",\n        \"nombre\": \"Colombia\"\n    },\n    \"ciudad\": {\n        \"id\": \"1\",\n        \"nombre\": \"Medellin\"\n    },\n    \"culturasGastronomica\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Mexicana\",\n            \"descripcion\": \"Cultura gastronomica de mexico\"\n        },\n        {\n            \"id\": \"2\",\n            \"nombre\": \"Colombiana\",\n            \"descripcion\": \"Cultura gastronomica  colombiana\"\n        }\n    ],\n    \"recetas\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Receta 1\",\n            \"descripcion\": \"Descripcion de la receta 1\",\n            \"foto\": \"http://foto.com/1.jpg\",\n            \"procesoPreperacion\": \"Pasos para la receta\",\n            \"video\": \"http://video.com/1.mp4\"\n        },\n        {\n            \"id\": \"2\",\n            \"nombre\": \"Receta 2\",\n            \"descripcion\": \"Descripcion de la receta 2\",\n            \"foto\": \"http://foto.com/2.jpg\",\n            \"procesoPreperacion\": \"Pasos para la receta\",\n            \"video\": \"http://video.com/2.mp4\"\n        }\n    ],\n    \"estrellasMichelin\": [\n        {\n            \"id\": \"1\",\n            \"fechaConsecucion\": \"2022-10-29\"\n        },\n        {\n            \"id\": \"2\",\n            \"fechaConsecucion\": \"2023-10-29\"\n        }\n    ]\n}"
						},
						{
							"name": "Agregar una cultura gastronomica a un restaurante que no existe",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Agregar una cultura gastronomica que no existe a un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Obtener una cultura gastronomica de un restaurante",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"restaurantes",
								"{{id_restaurante}}",
								"culturaGastronomica",
								"{{id_cultura}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una cultura gastronomica de un restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Mexicana\",\n    \"descripcion\": \"Cultura gastronomica de mexico\"\n}"
						},
						{
							"name": "Obtener una cultura gastronomica de un restaurante que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Obtener una cultura gastronomica que no existe de un restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\n}"
						},
						{
							"name": "Obtener una cultura gastronomica que no esta asociada a un restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "Request-URI Too Long",
							"code": 414,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 414,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no esta asociada al restaurante\"\n}"
						}
					]
				},
				{
					"name": "Obtener las culturas gastronomicas de un restaurante",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"restaurantes",
								"{{id_restaurante}}",
								"culturaGastronomica"
							]
						}
					},
					"response": [
						{
							"name": "Obtener las culturas gastronomicas de un restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"1\",\n        \"nombre\": \"Mexicana\",\n        \"descripcion\": \"Cultura gastronomica de mexico\"\n    },\n    {\n        \"id\": \"2\",\n        \"nombre\": \"Mexicana\",\n        \"descripcion\": \"Cultura gastronomica de mexico\"\n    }\n]"
						},
						{
							"name": "Obtener las culturas gastronomicas de un restaurante que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Actualizar las culturas gastronomicas de un restaurante",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\":\"1\"\r\n    },\r\n    {\r\n        \"id\":\"2\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"restaurantes",
								"{{id_restaurante}}",
								"culturaGastronomica"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar las culturas gastronomicas de un restaurante",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\":\"1\"\r\n    },\r\n    {\r\n        \"id\":\"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Restaurante\",\n    \"pais\": {\n        \"id\": \"1\",\n        \"nombre\": \"Colombia\"\n    },\n    \"ciudad\": {\n        \"id\": \"1\",\n        \"nombre\": \"Medellin\"\n    },\n    \"culturasGastronomica\": [\n        {\n            \"id\" : \"1\",\n            \"nombre\" : \"Mexicana\",\n            \"descripcion\" : \"Cultura gastronomica de mexico\"\n        },\n        {\n            \"id\" : \"2\",\n            \"nombre\" : \"Colombiana\",\n            \"descripcion\" : \"Cultura gastronomica  colombiana\"\n        }\n    ],\n    \"recetas\": [],\n    \"estrellasMichelin\": []\n}"
						},
						{
							"name": "Actualizar las culturas gastronomicas de un restaurante que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\":\"1\"\r\n    },\r\n    {\r\n        \"id\":\"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Actualizar las culturas gastronomicas que no existen de un restaurante",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\":\"1\"\r\n    },\r\n    {\r\n        \"id\":\"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\r\n}"
						}
					]
				},
				{
					"name": "Borrar una cultura gastronomica de un restaurante",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"restaurantes",
								"{{id_restaurante}}",
								"culturaGastronomica",
								"{{id_cultura}}"
							]
						}
					},
					"response": [
						{
							"name": "Borrar una cultura gastronomica de un restaurante",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"La cultura Gastronomica con el id indicado fue eliminada\"\n}"
						},
						{
							"name": "Borrar una cultura gastronomica de un restaurante que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Borrar una cultura gastronomica de un restaurante",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\n}"
						},
						{
							"name": "Borrar una cultura gastronomica no asociada a un restaurante",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes/{{id_restaurante}}/culturaGastronomica/{{id_cultura}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes",
										"{{id_restaurante}}",
										"culturaGastronomica",
										"{{id_cultura}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no esta asociada al restaurante\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "CulturaGastronomica-Pais",
			"item": [
				{
					"name": "Agregar un pais a una cultura gastronomica",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"culturasGastronomica",
								"{{id_cultura}}",
								"paises",
								"{{id_pais}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un pais a una cultura gastronomica",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Mexicana\",\n    \"descripcion\": \"Cultura gastronomica de mexico\",\n    \"pais\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Colombia\"\n        }\n    ],\n    \"Productos\": []\n}"
						},
						{
							"name": "Agregar un pais a una cultura gastronomica que no existe",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\n}"
						},
						{
							"name": "Agregar un pais que no existe a una cultura gastronomica",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El pais con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Obtener un pais de una cultura gastronomica",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"culturasGastronomica",
								"{{id_cultura}}",
								"paises",
								"{{id_pais}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un pais de una cultura gastronomica",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Colombia\"\n}"
						},
						{
							"name": "Obtener un pais de una cultura gastronomica que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\r\n}"
						},
						{
							"name": "Obtener un pais que no existe de una cultura gastronomica",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El pais con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Obtener un pais no asociado a una cultura gastronomica",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"El pais con el id indicado no esta asociada a la cultura gastronomica\"\n}"
						}
					]
				},
				{
					"name": "Obtener los paises de una cultura gastronomica",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"culturasGastronomica",
								"{{id_cultura}}",
								"paises"
							]
						}
					},
					"response": [
						{
							"name": "Obtener los paises de una cultura gastronomica",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"1\",\n        \"nombre\": \"Colombia\"\n    },\n    {\n        \"id\": \"2\",\n        \"nombre\": \"Peru\"\n    }\n]"
						},
						{
							"name": "Obtener los paises de una cultura gastronomica que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Actualizar los paises de una cultura gastronomica",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"1\"\r\n    },\r\n    {\r\n        \"id\": \"2\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"culturasGastronomica",
								"{{id_cultura}}",
								"paises"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar los paises de una cultura gastronomica",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"1\"\r\n    },\r\n    {\r\n        \"id\": \"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises"
									]
								}
							},
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Mexicana\",\n    \"descripcion\": \"Cultura gastronomica de mexico\",\n    \"pais\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Colombia\"\n        },\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Peru\"\n        }\n    ],\n    \"Productos\": []\n}"
						},
						{
							"name": "Actualizar los paises de una cultura gastronomica que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"1\"\r\n    },\r\n    {\r\n        \"id\": \"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\n}"
						},
						{
							"name": "Actualizar los paises que no existen de una cultura gastronomica",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"1\"\r\n    },\r\n    {\r\n        \"id\": \"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El pais con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Borrar un pais de una cultura gastronomica",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"culturasGastronomica",
								"{{id_cultura}}",
								"paises",
								"{{id_pais}}"
							]
						}
					},
					"response": [
						{
							"name": "Borrar un pais de una cultura gastronomica",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"El pais con el id indicado fue eliminado\"\n}"
						},
						{
							"name": "Borrar un pais de una cultura gastronomica que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El restaurante con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Borrar un pais que no existe de una cultura gastronomica",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El pais con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Borrar un pais no asociado a una cultura gastronomica",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/paises/{{id_pais}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"paises",
										"{{id_pais}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"El pais con el id indicado no esta asociada a la cultura gastronomica\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "CulturaGatronomica-Producto",
			"item": [
				{
					"name": "Agregar un producto a una cultura gastronomica",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/producto/{{id_producto}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"culturasGastronomica",
								"{{id_cultura}}",
								"producto",
								"{{id_producto}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un producto a una cultura gastronomica",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/producto/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"producto",
										"{{id_producto}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Mexicana\",\n    \"descripcion\": \"Cultura gastronomica de mexico\",\n    \"pais\": [],\n    \"Productos\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Nombre del producto\",\n            \"descripcion\": \"Descripcion del producto\",\n            \"historia\": \"Historia del producto\"\n        },\n        {\n            \"id\": \"2\",\n            \"nombre\": \"Nombre del producto\",\n            \"descripcion\": \"Descripcion del producto\",\n            \"historia\": \"Historia del producto\"\n        }\n    ]\n}"
						},
						{
							"name": "Agregar un producto a una cultura gastronomica que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/producto/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"producto",
										"{{id_producto}}"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\r\n}"
						},
						{
							"name": "Agregar un producto que no existe  a una cultura gastronomica",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/producto/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"producto",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Obtener un producto de una cultura gastronomica",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos/{{id_producto}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"culturasGastronomica",
								"{{id_cultura}}",
								"productos",
								"{{id_producto}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un producto de una cultura gastronomica",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\" : \"1\",\r\n    \"nombre\" : \"Nombre del producto\",\r\n    \"descripcion\" : \"Descripcion del producto\",\r\n    \"historia\" : \"Historia del producto\"\r\n}"
						},
						{
							"name": "Obtener un producto de una cultura gastronomica que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 404,\r\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\r\n}"
						},
						{
							"name": "Obtener un producto que no existe de una cultura gastronomica",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Obtener un producto no asociado a cultura gastronomica",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 412,\r\n    \"mensaje\": \"El producto con el id indicado no esta asociada a la cultura gastronomica\"\r\n}"
						}
					]
				},
				{
					"name": "Obtener todos los productos de una cultura gastronomica",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"culturasGastronomica",
								"{{id_cultura}}",
								"productos"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todos los productos de una cultura gastronomica",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"productos"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"1\",\n        \"nombre\": \"Nombre del producto\",\n        \"descripcion\": \"Descripcion del producto\",\n        \"historia\": \"Historia del producto\",\n        \"categoria\": {\n            \"id\": \"1\",\n            \"nombre\": \"categoria\"\n        }\n    },\n    {\n        \"id\": \"2\",\n        \"nombre\": \"Nombre del producto\",\n        \"descripcion\": \"Descripcion del producto\",\n        \"historia\": \"Historia del producto\",\n        \"categoria\": {\n            \"id\": \"1\",\n            \"nombre\": \"categoria\"\n        }\n    }\n]"
						},
						{
							"name": "Obtener todos los productos de una cultura gastronomica que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"productos"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Actualizar los productos de una cultura gastronomica",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"1\"\r\n    },\r\n    {\r\n        \"id\": \"2\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/producto",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"culturasGastronomica",
								"{{id_cultura}}",
								"producto"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar los productos de una cultura gastronomica",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"1\"\r\n    },\r\n    {\r\n        \"id\": \"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/producto",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"producto"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": \"1\",\r\n    \"nombre\": \"Mexicana\",\r\n    \"descripcion\": \"Cultura gastronomica de mexico\",\r\n    \"pais\": [],\r\n    \"Productos\": [\r\n        {\r\n            \"id\": \"1\",\r\n            \"nombre\": \"Nombre del producto\",\r\n            \"descripcion\": \"Descripcion del producto\",\r\n            \"historia\": \"Historia del producto\"\r\n        },\r\n        {\r\n            \"id\": \"2\",\r\n            \"nombre\": \"Nombre del producto\",\r\n            \"descripcion\": \"Descripcion del producto\",\r\n            \"historia\": \"Historia del producto\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "Actualizar los productos de una cultura gastronomica que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"1\"\r\n    },\r\n    {\r\n        \"id\": \"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/producto",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"producto"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\n}"
						},
						{
							"name": "Actualizar los productos que no existen de una cultura gastronomica",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"1\"\r\n    },\r\n    {\r\n        \"id\": \"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/producto",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"producto"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Borrar un producto de una cultura gastronomica",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos/{{id_producto}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"culturasGastronomica",
								"{{id_cultura}}",
								"productos",
								"{{id_producto}}"
							]
						}
					},
					"response": [
						{
							"name": "Borrar un producto de una cultura gastronomica",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"El producto con el id indicado fue eliminado\"\n}"
						},
						{
							"name": "Borrar un producto de una cultura gastronomica no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La cultura gastronomica con el id indicado no fue encontrada\"\n}"
						},
						{
							"name": "Borrar un producto que no existe de una cultura gastronomica",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Borrar un producto no asociado a una cultura gastronomica",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/culturasGastronomica/{{id_cultura}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"culturasGastronomica",
										"{{id_cultura}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"El producto con el id indicado no esta asociada a la cultura gastronomica\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Receta-Producto",
			"item": [
				{
					"name": "Agregar un producto a una receta",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"receta",
								"{{id_receta}}",
								"productos",
								"{{id_producto}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un producto a una receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/producto/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"producto",
										"{{id_producto}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Receta 1\",\n    \"descripcion\": \"Descripcion de la receta 1\",\n    \"foto\": \"http://foto.com/1.jpg\",\n    \"procesoPreperacion\": \"Pasos para la receta\",\n    \"video\": \"http://video.com/1.mp4\",\n    \"culturaGastronomica\": {\n        \"id\": \"1\",\n        \"nombre\": \"Mexicana\",\n        \"descripcion\": \"Cultura gastronomica de mexico\"\n    },\n    \"Productos\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Nombre del producto\",\n            \"descripcion\": \"Descripcion del producto\",\n            \"historia\": \"Historia del producto\"\n        },\n        {\n            \"id\": \"2\",\n            \"nombre\": \"Nombre del producto\",\n            \"descripcion\": \"Descripcion del producto\",\n            \"historia\": \"Historia del producto\"\n        }\n    ]\n}"
						},
						{
							"name": "Agregar un producto a una receta que no existe",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/producto/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"producto",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrada\"\n}"
						},
						{
							"name": "Agregar un producto a una receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/producto/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"producto",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Obtener un producto de una receta",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"receta",
								"{{id_receta}}",
								"productos",
								"{{id_producto}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un producto de una cultura receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Nombre del producto\",\n    \"descripcion\": \"Descripcion del producto\",\n    \"historia\": \"Historia del producto\"\n}"
						},
						{
							"name": "Obtener un producto de una receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrada\"\n}"
						},
						{
							"name": "Obtener un producto que no existe de una receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Obtener un producto no asociado a una receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"El producto con el id indicado no esta asociada a la receta\"\n}"
						}
					]
				},
				{
					"name": "Obtener todos los productos de una receta",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"receta",
								"{{id_receta}}",
								"productos"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todos los productos de una receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"1\",\n        \"nombre\": \"Nombre del producto\",\n        \"descripcion\": \"Descripcion del producto\",\n        \"historia\": \"Historia del producto\"\n    },\n    {\n        \"id\": \"2\",\n        \"nombre\": \"Nombre del producto\",\n        \"descripcion\": \"Descripcion del producto\",\n        \"historia\": \"Historia del producto\"\n    }\n]"
						},
						{
							"name": "Obtener todos los productos de una receta que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Actualizar los productos de una receta",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"receta",
								"{{id_receta}}",
								"productos",
								"{{id_producto}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar los productos de una receta",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"1\"\r\n    },\r\n    {\r\n        \"id\": \"2\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Receta 1\",\n    \"descripcion\": \"Descripcion de la receta 1\",\n    \"foto\": \"http://foto.com/1.jpg\",\n    \"procesoPreperacion\": \"Pasos para la receta\",\n    \"video\": \"http://video.com/1.mp4\",\n    \"culturaGastronomica\": {\n        \"id\": \"1\",\n        \"nombre\": \"Mexicana\",\n        \"descripcion\": \"Cultura gastronomica de mexico\"\n    },\n    \"Productos\": [\n        {\n            \"id\": \"1\",\n            \"nombre\": \"Nombre del producto\",\n            \"descripcion\": \"Descripcion del producto\",\n            \"historia\": \"Historia del producto\"\n        },\n        {\n            \"id\": \"2\",\n            \"nombre\": \"Nombre del producto\",\n            \"descripcion\": \"Descripcion del producto\",\n            \"historia\": \"Historia del producto\"\n        }\n    ]\n}"
						},
						{
							"name": "Actualizar los productos de una receta que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrada\"\n}"
						},
						{
							"name": "Actualizar los productos que no existen de una receta",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Borrar un producto de una receta",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"receta",
								"{{id_receta}}",
								"productos",
								"{{id_producto}}"
							]
						}
					},
					"response": [
						{
							"name": "Borrar un producto de una receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 204,\n    \"mensaje\": \"El producto con el id indicado fue eliminado\"\n}"
						},
						{
							"name": "Borrar un producto de una receta que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"La receta con el id indicado no fue encontrada\"\n}"
						},
						{
							"name": "Borrar un producto que no existe de una receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 404,\n    \"mensaje\": \"El producto con el id indicado no fue encontrado\"\n}"
						},
						{
							"name": "Borrar un producto no asociado a una receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/receta/{{id_receta}}/productos/{{id_producto}}",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"receta",
										"{{id_receta}}",
										"productos",
										"{{id_producto}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"El producto con el id indicado no esta asociada a la receta\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Restaurante-Ciudad",
			"item": [
				{
					"name": "Crea un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_restaurante\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Restaurante 2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes"
							]
						}
					},
					"response": [
						{
							"name": "Crea un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Restaurante\",\r\n    \"pais\": \"1\",\r\n    \"ciudad\": \"1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Restaurante\",\n    \"pais\": {\n        \"id\": \"1\",\n        \"nombre\": \"Colombia\"\n    },\n    \"ciudad\": {\n        \"id\": \"1\",\n        \"nombre\": \"Medellin\"\n    },\n    \"culturasGastronomica\": [],\n    \"recetas\": [],\n    \"estrellasMichelin\": []\n}"
						},
						{
							"name": "Crea un restaurante datos incorrectos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Restaurante\",\r\n    \"pais\": \"1\",\r\n    \"ciudad\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/restaurantes",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"restaurantes"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"codigoEstado\": 412,\r\n    \"mensaje\": \"Se debe indicar la ciudad del restaurante\"\r\n}"
						}
					]
				},
				{
					"name": "Elimina la ciudad de un restaurante sin ciudad asociada",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El restaurante no tiene una ciudad asociada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/{{id_restaurante}}/ciudad/{{id_ciudad}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"{{id_restaurante}}",
								"ciudad",
								"{{id_ciudad}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "crear ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_ciudad\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Medellin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades"
							]
						}
					},
					"response": [
						{
							"name": "crear ciudad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Medellin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Medellin\"\n}"
						},
						{
							"name": "crear ciudad datos incorrectos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe indicar la ciudad de la ciudad\"\n}"
						}
					]
				},
				{
					"name": "Asocia la ciudad al restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/{{id_restaurante}}/ciudad/{{id_ciudad}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"{{id_restaurante}}",
								"ciudad",
								"{{id_ciudad}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar una ciudad que no existe a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La ciudad con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/{{id_restaurante}}/ciudad/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"{{id_restaurante}}",
								"ciudad",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar una ciudad  a un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/00000000-0000-0000-0000-000000000000/ciudad/{{id_ciudad}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"00000000-0000-0000-0000-000000000000",
								"ciudad",
								"{{id_ciudad}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtiene la ciudad de un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/{{id_restaurante}}/ciudad",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"{{id_restaurante}}",
								"ciudad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtiene la ciudad de un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/00000000-0000-0000-0000-000000000000/ciudad",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"00000000-0000-0000-0000-000000000000",
								"ciudad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Elimina la ciudad de un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/{{id_restaurante}}/ciudad/{{id_ciudad}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"{{id_restaurante}}",
								"ciudad",
								"{{id_ciudad}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtiene la ciudad de un restaurante que no tiene ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El restaurante no tiene una ciudad asociada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/{{id_restaurante}}/ciudad",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"{{id_restaurante}}",
								"ciudad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Elimina la ciudad de un restaurante no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/00000000-0000-0000-0000-000000000000/ciudad/{{id_ciudad}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"00000000-0000-0000-0000-000000000000",
								"ciudad",
								"{{id_ciudad}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Elimina la ciudad de un restaurante no existente Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La ciudad con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/restaurantes/{{id_restaurante}}/ciudad/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"restaurantes",
								"{{id_restaurante}}",
								"ciudad",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pais-Region",
			"item": [
				{
					"name": "crear un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_pais\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\" : \"Argentina\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises"
							]
						}
					},
					"response": [
						{
							"name": "crear un pais",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Colombia\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Colombia\",\r\n        \"ciudades\" : [],\r\n        \"region\" : []\r\n    }"
						},
						{
							"name": "crear un pais datos incorrectos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe el nombre del pais\"\n}"
						}
					]
				},
				{
					"name": "Crear region",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_region\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\" : \"region\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/regiones",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"regiones"
							]
						}
					},
					"response": [
						{
							"name": "Crear region",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"region\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": \"1\",\r\n    \"nombre\" : \"region\"\r\n}"
						},
						{
							"name": "Crear region datos no validos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/regiones",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"regiones"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe el nombre de la region\"\n}"
						}
					]
				},
				{
					"name": "Asocia la region al pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/{{id_pais}}/region/{{id_region}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"{{id_pais}}",
								"region",
								"{{id_region}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar una region que no existe a un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La region con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/{{id_pais}}/region/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"{{id_pais}}",
								"region",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar una region  a un pais que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El pais con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/00000000-0000-0000-0000-000000000000/region/{{id_region}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"00000000-0000-0000-0000-000000000000",
								"region",
								"{{id_region}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtiene la region de un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/{{id_pais}}/region",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"{{id_pais}}",
								"region"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtiene la region de un pais que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El pais con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/00000000-0000-0000-0000-000000000000/region",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"00000000-0000-0000-0000-000000000000",
								"region"
							]
						}
					},
					"response": []
				},
				{
					"name": "Elimina la region de un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/{{id_pais}}/region/{{id_region}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"{{id_pais}}",
								"region",
								"{{id_region}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtiene la region de un pais que no tiene region",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El pais no tiene una region asociada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/{{id_pais}}/region",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"{{id_pais}}",
								"region"
							]
						}
					},
					"response": []
				},
				{
					"name": "Elimina la region de un pais no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El pais con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/00000000-0000-0000-0000-000000000000/region/{{id_region}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"00000000-0000-0000-0000-000000000000",
								"region",
								"{{id_region}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Elimina la region de un pais no existente Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La region con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises/{{id_pais}}/region/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises",
								"{{id_pais}}",
								"region",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pais-Ciudad",
			"item": [
				{
					"name": "crear ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_ciudad\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Moniquira\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades"
							]
						}
					},
					"response": [
						{
							"name": "crear ciudad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Medellin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1\",\n    \"nombre\": \"Medellin\"\n}"
						},
						{
							"name": "crear ciudad datos incorrectos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/ciudades",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"ciudades"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe indicar la ciudad de la ciudad\"\n}"
						}
					]
				},
				{
					"name": "Elimina el pais de un ciudad sin pais asociada",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La ciudad no tiene un pais asociado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/{{id_ciudad}}/pais/{{id_pais}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"{{id_ciudad}}",
								"pais",
								"{{id_pais}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "crear un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"id_pais\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\" : \"Colombia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/paises",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"paises"
							]
						}
					},
					"response": [
						{
							"name": "crear un pais",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"Colombia\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n        \"id\" : \"1\",\r\n        \"nombre\" : \"Colombia\",\r\n        \"ciudades\" : [],\r\n        \"region\" : []\r\n    }"
						},
						{
							"name": "crear un pais datos incorrectos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\" : \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/paises",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{BASE_URL}}"
									],
									"port": "{{PORT}}",
									"path": [
										"paises"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"codigoEstado\": 412,\n    \"mensaje\": \"Se debe el nombre del pais\"\n}"
						}
					]
				},
				{
					"name": "Asocia el pais a la ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/{{id_ciudad}}/pais/{{id_pais}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"{{id_ciudad}}",
								"pais",
								"{{id_pais}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar un pais que no existe a una ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El pais con el id indicado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/{{id_ciudad}}/pais/00000000-0000-0000-0000-000000000000",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"{{id_ciudad}}",
								"pais",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar un pais  a una ciudad que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La ciudad con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/00000000-0000-0000-0000-000000000000/pais/{{id_pais}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"00000000-0000-0000-0000-000000000000",
								"pais",
								"{{id_pais}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtiene el pais de una ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/{{id_ciudad}}/pais",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"{{id_ciudad}}",
								"pais"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtiene el pais de una ciudad que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La ciudad con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/00000000-0000-0000-0000-000000000000/pais",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"00000000-0000-0000-0000-000000000000",
								"pais"
							]
						}
					},
					"response": []
				},
				{
					"name": "Elimina el pais de una ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/{{id_ciudad}}/pais/{{id_pais}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"{{id_ciudad}}",
								"pais",
								"{{id_pais}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtiene el pais de una ciudad que no tiene pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La ciudad no tiene un pais asociado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/{{id_ciudad}}/pais",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"{{id_ciudad}}",
								"pais"
							]
						}
					},
					"response": []
				},
				{
					"name": "Elimina el pais de una ciudad no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La ciudad con el id indicado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{BASE_URL}}:{{PORT}}/{{VERSION}}/ciudades/00000000-0000-0000-0000-000000000000/pais/{{id_pais}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{BASE_URL}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{VERSION}}",
								"ciudades",
								"00000000-0000-0000-0000-000000000000",
								"pais",
								"{{id_pais}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE_URL",
			"value": "localhost",
			"type": "string"
		},
		{
			"key": "PORT",
			"value": "3000",
			"type": "string"
		},
		{
			"key": "PROTOCOL",
			"value": "http",
			"type": "string"
		},
		{
			"key": "VERSION",
			"value": "api/v1",
			"type": "string"
		}
	]
}